<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" title="HomeView" viewActivate="init()">
	
	<fx:Script>
		<![CDATA[
			import com.chartboost.plugin.air.*;
			import spark.events.PopUpEvent;
			
			private var chartboost:Chartboost;
			
			private var shouldDisplayInterstitials:Boolean = true;
			private var shouldDisplayMoreApps:Boolean = true;
			private var shouldDisplayRewardedVideos:Boolean = true;
			
			private function init():void {
				trace("Chartboost View init()");
				chartboost = Chartboost.getInstance();
				addDelegateMethods();
			}
			
			private function addDelegateMethods():void {
				chartboost.addDelegateEvent(ChartboostEvent.SHOULD_DISPLAY_INTERSTITIAL, function (location:String):Boolean {
					log( "Chartboost: should display Interstitial: " + location + "? " + shouldDisplayInterstitials );
					return shouldDisplayInterstitials;
				});
				
				chartboost.addDelegateEvent(ChartboostEvent.SHOULD_DISPLAY_MOREAPPS, function (location:String):Boolean {
					log( "Chartboost: should display More Apps: " + location + "? " + shouldDisplayMoreApps );
					return shouldDisplayMoreApps;
				});
				
				chartboost.addDelegateEvent(ChartboostEvent.SHOULD_DISPLAY_REWARDED_VIDEO, function (location:String):Boolean {
					log( "Chartboost: should display Rewarded Video: " + location + "? " + shouldDisplayRewardedVideos );
					return shouldDisplayRewardedVideos;
				});
				
				chartboost.addDelegateEvent(ChartboostEvent.DID_PAUSE_CLICK_FOR_COMFIRMATION, function ():void {
					log( "Chartboost: did pause click for confirmation" );
					ageGateUI.open(showInterstitial, true);
					ageGateUI.y = 100;
				});
			}
			
			private function answeredAgeGate(passed:Boolean):void {
				log( "Chartboost: age gate passed? " + passed.toString() );
				Chartboost.getInstance().didPassAgeGate(passed);
				ageGateUI.close();
			}
			
			private function log(txt:String):void {
				chartboost.nativeLog(txt);
			}
			
			private function trackIAP(cost:Number):void {
				if (Chartboost.isAndroid()) {
					Chartboost.getInstance().trackGooglePlayInAppPurchaseEvent("IAP_title", "IAP description", cost, "USD", "IAP_id", "purchase_data", "purchase_sig");
				} else {
					Chartboost.getInstance().trackIOSInAppPurchaseEvent("IAP_title", "IAP description", cost, "USD", "IAP_id", "receipt");
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:SkinnablePopUpContainer id="ageGateUI" width="300">
			<s:Panel title="Did Pause Click for Confirmation">
				<s:VGroup horizontalAlign="center" paddingTop="20" gap="20" width="100%">
					<s:Label text="Age gate: are you over 18?"/>
					<s:HGroup width="100%">
						<s:Button label="Yes" width="50%" click="answeredAgeGate(true)"/>
						<s:Button label="No" width="50%" click="answeredAgeGate(false)"/>
					</s:HGroup>
				</s:VGroup>
			</s:Panel>
		</s:SkinnablePopUpContainer>
	</fx:Declarations>
	
	<s:layout>
		<s:HorizontalLayout 
			paddingLeft="10" paddingRight="10"
			paddingTop="10" paddingBottom="10"
			gap="5"/>
	</s:layout>
	
	<s:Group>
		<s:layout>
			<s:VerticalLayout
				gap="5"/>
		</s:layout>
	
		<s:Panel>
			<s:layout>
				<s:VerticalLayout 
					paddingLeft="10" paddingRight="10"
					paddingTop="10" paddingBottom="10"
					gap="5"/>
			</s:layout>
			<s:Button id="showInterstitial" label="Show Interstitial" top="48" width="160" click="Chartboost.getInstance().showInterstitial(CBLocation.DEFAULT);" />
			<s:Button id="cacheInterstitial" label="Cache Interstitial" width="160" click="Chartboost.getInstance().cacheInterstitial(CBLocation.DEFAULT);" />
			<s:Button id="hasInterstitial" label="Is Interstitial Cached" width="160" click="Chartboost.getInstance().nativeLog('interstitial cached: ' + Chartboost.getInstance().hasInterstitial(CBLocation.DEFAULT).toString());" />
		</s:Panel>
			
		<s:Panel>
			<s:layout>
				<s:VerticalLayout 
					paddingLeft="10" paddingRight="10"
					paddingTop="10" paddingBottom="10"
					gap="5"/>
			</s:layout>
			<s:Button id="showMoreApps" label="Show More Apps" width="160" click="Chartboost.getInstance().showMoreApps(CBLocation.DEFAULT);" />
			<s:Button id="cacheMoreApps" label="Cache More Apps" width="160" click="Chartboost.getInstance().cacheMoreApps(CBLocation.DEFAULT);" />
			<s:Button id="hasMoreApps" label="Is More Apps Cached" width="160" click="Chartboost.getInstance().nativeLog('more apps cached: ' + Chartboost.getInstance().hasMoreApps(CBLocation.DEFAULT).toString());" />
		</s:Panel>
	</s:Group>
	
	<s:Group>
		<s:layout>
			<s:VerticalLayout
				gap="5"/>
		</s:layout>
	
		<s:Panel>
			<s:layout>
				<s:VerticalLayout 
					paddingLeft="10" paddingRight="10"
					paddingTop="10" paddingBottom="10"
					gap="5"/>
			</s:layout>
			<s:Button id="showRewardedVideo" label="Show Rewarded Video" width="200" click="Chartboost.getInstance().showRewardedVideo(CBLocation.DEFAULT);" />
			<s:Button id="cacheRewardedVideo" label="Cache Rewarded Video" width="200" click="Chartboost.getInstance().cacheRewardedVideo(CBLocation.DEFAULT);" />
			<s:Button id="hasRewardedVideo" label="Is Rewarded Video Cached" width="200" click="Chartboost.getInstance().nativeLog('rewarded video cached: ' + Chartboost.getInstance().hasRewardedVideo(CBLocation.DEFAULT).toString());" />
		</s:Panel>
	</s:Group>
	
	<s:Panel>
		<s:layout>
			<s:VerticalLayout 
				paddingLeft="10" paddingRight="10"
				paddingTop="10" paddingBottom="10"
				gap="5"/>
		</s:layout>
		<s:CheckBox id="chkAutoCache" label="Auto Cache Ads" width="280" selected="true" change="Chartboost.getInstance().setAutoCacheAds(chkAutoCache.selected);" />
		<s:CheckBox id="chkAgeGate" label="Use Age Gate" width="280" change="Chartboost.getInstance().setShouldPauseClickForConfirmation(chkAgeGate.selected);" />
		<s:CheckBox id="chkPrefetchVideo" label="Prefetch Video Content" width="280" selected="true" change="Chartboost.getInstance().setShouldPrefetchVideoContent(chkPrefetchVideo.selected);" />
		<s:CheckBox id="chkFirstInt" label="Interstitials in 1st Session" width="280" selected="true" change="Chartboost.getInstance().setShouldRequestInterstitialsInFirstSession(chkFirstInt.selected);" />
		<s:CheckBox id="chkShouldInt" label="Should display interstitials?" width="280" selected="true" change="shouldDisplayInterstitials = chkShouldInt.selected;" />
		<s:CheckBox id="chkShouldMoreApps" label="Should display more apps?" width="280" selected="true" change="shouldDisplayMoreApps = chkShouldMoreApps.selected;" />
		<s:CheckBox id="chkShouldRV" label="Should display rewarded video?" width="280" selected="true" change="shouldDisplayRewardedVideos = chkShouldRV.selected;" />
	</s:Panel>
	
</s:View>
